{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcelo/Documentos/shopManager/shopManager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/marcelo/Documentos/shopManager/shopManager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport apisauce from 'apisauce';\nimport history from './history';\nvar REDIRECT_CODES = [7, 8];\nvar REDIRECT_STATUSES = [429];\n\nvar create = function create(baseURL) {\n  // home\n  var api = apisauce.create({\n    baseURL: baseURL,\n    headers: {\n      Accept: 'application/json'\n    }\n  });\n  api.addAsyncRequestTransform(function (request) {\n    return (\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var accessToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                accessToken = JSON.parse(localStorage.getItem('access_token'));\n\n                if (accessToken) {\n                  request.headers['x-access-token'] = accessToken;\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))\n    );\n  });\n  api.addMonitor(function (response) {\n    if (!response.ok) {\n      for (var i in REDIRECT_STATUSES) {\n        if (response.status === REDIRECT_STATUSES[i]) {\n          localStorage.clear();\n          history.push('/login');\n          break;\n        }\n\n        if (response.status === 403) {\n          for (var j in REDIRECT_CODES) {\n            if (response.data.code === REDIRECT_CODES[j]) {\n              localStorage.clear();\n              history.push('/login');\n              break;\n            }\n          }\n        }\n      }\n    }\n  });\n\n  if (true) {\n    api.addMonitor(function (response) {\n      return console.log('response: ', response);\n    });\n  } // TODO - Add error parser to transform into an specific error api\n\n  /** Conection Login API */\n\n  /**\n   *\n   * @param string email\n   * @param string password\n   */\n\n\n  var doLogin = function doLogin(email, password) {\n    return api.post('/access-token', {\n      email: email,\n      password: password\n    });\n  };\n  /**\n   *\n   * @param string token\n   */\n\n\n  var logout = function logout(token) {\n    return api.delete(\"/access-token/\".concat(token));\n  };\n  /**\n   *\n   * @param string token\n   */\n\n\n  var checkAuth = function checkAuth(token) {\n    return api.get(\"/access-token/\".concat(token));\n  };\n  /** Conection User API */\n\n  /**\n   * Creates an user\n   * @param object user\n   * @returns Promise\n   */\n\n\n  var postUserCollection = function postUserCollection(user) {\n    return api.post('/user', user);\n  };\n  /**\n   * Update an user\n   * @param int    uuid  User id\n   * @param Object user    User object\n   * @returns Promise\n   */\n\n\n  var patchUserResource = function patchUserResource(uuid, user) {\n    return api.patch(\"/user/\".concat(uuid), user);\n  };\n  /**\n   * Delete an user\n   * @param int    uuid  User id\n   * @returns Promise\n   */\n\n\n  var deleteUserResource = function deleteUserResource(uuid) {\n    return api.delete(\"/user/\".concat(uuid));\n  };\n  /**\n   * Get users\n   * @returns Promise\n   */\n\n\n  var getUserCollection = function getUserCollection(query) {\n    return api.get(\"/user\", query);\n  };\n  /**\n   * Get an user\n   * @param int    id  User id\n   * @returns Promise\n   */\n\n\n  var getUserResource = function getUserResource(id) {\n    return api.get(\"/user/\".concat(id));\n  };\n  /** Conection Business Center API */\n\n  /**\n   *\n   */\n\n\n  var getCustomerCollection = function getCustomerCollection() {\n    return api.get(\"/customer\");\n  };\n  /**\n   *\n   * @param object customer\n   */\n\n\n  var postCustomerCollection = function postCustomerCollection(customer) {\n    return api.post(\"/customer\", customer);\n  };\n  /**\n   *\n   * @param string customer_id\n   */\n\n\n  var getCustomerResource = function getCustomerResource(customer_id) {\n    return api.get(\"/customer/\".concat(customer_id));\n  };\n  /**\n   *\n   * @param string customer_id\n   * @param object customer\n   */\n\n\n  var patchCustomerResource = function patchCustomerResource(customer_id, customer) {\n    return api.patch(\"/customer/\".concat(customer_id), customer);\n  };\n  /**\n   *\n   * @param string customer_id\n   */\n\n\n  var deleteCustomerResource = function deleteCustomerResource(customer_id) {\n    return api.delete(\"/customer/\".concat(customer_id));\n  };\n\n  return {\n    // Auth endpoint calls\n    doLogin: doLogin,\n    logout: logout,\n    checkAuth: checkAuth,\n    // User endpoint calls\n    postUserCollection: postUserCollection,\n    patchUserResource: patchUserResource,\n    deleteUserResource: deleteUserResource,\n    getUserCollection: getUserCollection,\n    getUserResource: getUserResource,\n    // Customer calls\n    getCustomerCollection: getCustomerCollection,\n    postCustomerCollection: postCustomerCollection,\n    getCustomerResource: getCustomerResource,\n    patchCustomerResource: patchCustomerResource,\n    deleteCustomerResource: deleteCustomerResource\n  };\n};\n\nexport default {\n  create: create\n};","map":{"version":3,"sources":["/home/marcelo/Documentos/shopManager/shopManager-frontend/src/Services/Api.js"],"names":["apisauce","history","REDIRECT_CODES","REDIRECT_STATUSES","create","baseURL","api","headers","Accept","addAsyncRequestTransform","request","accessToken","JSON","parse","localStorage","getItem","addMonitor","response","ok","i","status","clear","push","j","data","code","console","log","doLogin","email","password","post","logout","token","delete","checkAuth","get","postUserCollection","user","patchUserResource","uuid","patch","deleteUserResource","getUserCollection","query","getUserResource","id","getCustomerCollection","postCustomerCollection","customer","getCustomerResource","customer_id","patchCustomerResource","deleteCustomerResource"],"mappings":"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","sourcesContent":["import apisauce from 'apisauce';\nimport history from './history';\n\nconst REDIRECT_CODES = [7, 8];\nconst REDIRECT_STATUSES = [429];\n\nconst create = (baseURL) => { // home\n    const api = apisauce.create({\n        baseURL,\n        headers: {\n            Accept: 'application/json',\n        }\n    });\n    api.addAsyncRequestTransform(request => async () => {\n        const accessToken = JSON.parse(localStorage.getItem('access_token'));\n        if (accessToken) {\n            request.headers['x-access-token'] = accessToken;\n        }\n    });\n\n    api.addMonitor(response => {\n        if (!response.ok) {\n            for (let i in REDIRECT_STATUSES) {\n                if (response.status === REDIRECT_STATUSES[i]) {\n                    localStorage.clear();\n                    history.push('/login');\n                    break;\n                }\n                if (response.status === 403) {\n                    for (let j in REDIRECT_CODES) {\n                        if (response.data.code === REDIRECT_CODES[j]) {\n                            localStorage.clear();\n                            history.push('/login');\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    });\n\n    if (true) {\n        api.addMonitor(response => console.log('response: ', response));\n    }\n\n    // TODO - Add error parser to transform into an specific error api\n    /** Conection Login API */\n    /**\n     *\n     * @param string email\n     * @param string password\n     */\n    const doLogin = (email, password) => {\n        return api.post('/access-token', { email, password });\n    };\n\n    /**\n     *\n     * @param string token\n     */\n    const logout = (token) => {\n        return api.delete(`/access-token/${token}`);\n    };\n\n    /**\n     *\n     * @param string token\n     */\n    const checkAuth = (token) => {\n        return api.get(`/access-token/${token}`);\n    };\n\n    /** Conection User API */\n    /**\n     * Creates an user\n     * @param object user\n     * @returns Promise\n     */\n    const postUserCollection = (user) => {\n        return api.post('/user', user);\n    };\n\n    /**\n     * Update an user\n     * @param int    uuid  User id\n     * @param Object user    User object\n     * @returns Promise\n     */\n    const patchUserResource = (uuid, user) => {\n        return api.patch(`/user/${uuid}`, user);\n    };\n\n    /**\n     * Delete an user\n     * @param int    uuid  User id\n     * @returns Promise\n     */\n    const deleteUserResource = (uuid) => {\n        return api.delete(`/user/${uuid}`);\n    };\n\n    /**\n     * Get users\n     * @returns Promise\n     */\n    const getUserCollection = (query) => {\n        return api.get(`/user`, query);\n    };\n\n    /**\n     * Get an user\n     * @param int    id  User id\n     * @returns Promise\n     */\n    const getUserResource = (id) => {\n        return api.get(`/user/${id}`);\n    };\n\n    /** Conection Business Center API */\n    /**\n     *\n     */\n    const getCustomerCollection = () => {\n        return api.get(`/customer`);\n    }\n\n    /**\n     *\n     * @param object customer\n     */\n    const postCustomerCollection = (customer) => {\n        return api.post(`/customer`, customer);\n    }\n\n    /**\n     *\n     * @param string customer_id\n     */\n    const getCustomerResource = (customer_id) => {\n        return api.get(`/customer/${customer_id}`);\n    }\n\n    /**\n     *\n     * @param string customer_id\n     * @param object customer\n     */\n    const patchCustomerResource = (customer_id, customer) => {\n        return api.patch(`/customer/${customer_id}`, customer);\n    }\n\n    /**\n     *\n     * @param string customer_id\n     */\n    const deleteCustomerResource = (customer_id) => {\n        return api.delete(`/customer/${customer_id}`);\n    }\n\n    return {\n        // Auth endpoint calls\n        doLogin,\n        logout,\n        checkAuth,\n        // User endpoint calls\n        postUserCollection,\n        patchUserResource,\n        deleteUserResource,\n        getUserCollection,\n        getUserResource,\n        // Customer calls\n        getCustomerCollection,\n        postCustomerCollection,\n        getCustomerResource,\n        patchCustomerResource,\n        deleteCustomerResource\n    };\n};\n\nexport default {\n    create\n}\n"]},"metadata":{},"sourceType":"module"}