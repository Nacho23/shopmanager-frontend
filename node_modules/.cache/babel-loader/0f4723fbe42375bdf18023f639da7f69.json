{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcelo/Documentos/shopManager/shopManager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getServices),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(createService),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getService),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(updateService),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteService),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchService);\n\nimport { takeLatest, put, call, select } from 'redux-saga/effects';\nimport ServiceActions, { ServiceTypes } from '../Redux/ServiceRedux';\nimport ApiResponseError from '../Services/ApiResponseError';\n/**\n * Get the entuty account transactions\n * @param Api    api\n * @param Action action\n */\n\nexport function getServices(api, action) {\n  var response, data;\n  return _regeneratorRuntime.wrap(function getServices$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.getServiceCollection);\n\n        case 3:\n          response = _context.sent;\n\n          if (response.ok) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 6:\n          data = response.data;\n          console.log('save', data);\n          _context.next = 10;\n          return put(ServiceActions.fetchServicesSuccess(data.services));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(ServiceActions.fetchServicesFailure(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\nexport function createService(api, action) {\n  var response, data;\n  return _regeneratorRuntime.wrap(function createService$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(api.postServiceCollection, action.service);\n\n        case 3:\n          response = _context2.sent;\n\n          if (response.ok) {\n            _context2.next = 6;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 6:\n          data = response.data.data;\n          _context2.next = 9;\n          return put(ServiceActions.createServiceSuccess(data.service));\n\n        case 9:\n          _context2.next = 15;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 15;\n          return put(ServiceActions.createServiceFailure(_context2.t0));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\nexport function getService(api, action) {\n  var response, data;\n  return _regeneratorRuntime.wrap(function getService$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(api.getServiceResource, action.service_id);\n\n        case 3:\n          response = _context3.sent;\n\n          if (response.ok) {\n            _context3.next = 6;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 6:\n          data = response.data.data;\n          _context3.next = 9;\n          return put(ServiceActions.fetchServiceSuccess(data.service));\n\n        case 9:\n          _context3.next = 15;\n          break;\n\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 15;\n          return put(ServiceActions.fetchServiceFailure(_context3.t0));\n\n        case 15:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 11]]);\n}\nexport function updateService(api, action) {\n  var response, data;\n  return _regeneratorRuntime.wrap(function updateService$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(api.patchServiceResource, action.service_id, action.service);\n\n        case 3:\n          response = _context4.sent;\n\n          if (response.ok) {\n            _context4.next = 6;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 6:\n          data = response.data.data;\n          _context4.next = 9;\n          return put(ServiceActions.updateServiceSuccess(data.service));\n\n        case 9:\n          _context4.next = 15;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 15;\n          return put(ServiceActions.updateServiceFailure(_context4.t0));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 11]]);\n}\nexport function deleteService(api, action) {\n  var response;\n  return _regeneratorRuntime.wrap(function deleteService$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(api.deleteServiceResource, action.service_id);\n\n        case 3:\n          response = _context5.sent;\n\n          if (response.ok) {\n            _context5.next = 6;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 6:\n          _context5.next = 8;\n          return put(ServiceActions.deleteServiceSuccess());\n\n        case 8:\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 14;\n          return put(ServiceActions.deleteServiceFailure(_context5.t0));\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\nexport function watchService(api) {\n  return _regeneratorRuntime.wrap(function watchService$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(ServiceTypes.FETCH_SERVICES, getServices, api);\n\n        case 2:\n          _context6.next = 4;\n          return takeLatest(ServiceTypes.CREATE_SERVICE, createService, api);\n\n        case 4:\n          _context6.next = 6;\n          return takeLatest(ServiceTypes.FETCH_SERVICE, getService, api);\n\n        case 6:\n          _context6.next = 8;\n          return takeLatest(ServiceTypes.UPDATE_SERVICE, updateService, api);\n\n        case 8:\n          _context6.next = 10;\n          return takeLatest(ServiceTypes.DELETE_SERVICE, deleteService, api);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}","map":{"version":3,"sources":["/home/marcelo/Documentos/shopManager/shopManager-frontend/src/Sagas/ServiceSagas.js"],"names":["getServices","createService","getService","updateService","deleteService","watchService","takeLatest","put","call","select","ServiceActions","ServiceTypes","ApiResponseError","api","action","getServiceCollection","response","ok","data","console","log","fetchServicesSuccess","services","fetchServicesFailure","postServiceCollection","service","createServiceSuccess","createServiceFailure","getServiceResource","service_id","fetchServiceSuccess","fetchServiceFailure","patchServiceResource","updateServiceSuccess","updateServiceFailure","deleteServiceResource","deleteServiceSuccess","deleteServiceFailure","FETCH_SERVICES","CREATE_SERVICE","FETCH_SERVICE","UPDATE_SERVICE","DELETE_SERVICE"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, select } from 'redux-saga/effects';\nimport ServiceActions, { ServiceTypes } from '../Redux/ServiceRedux';\nimport ApiResponseError from '../Services/ApiResponseError';\n\n/**\n * Get the entuty account transactions\n * @param Api    api\n * @param Action action\n */\nexport function * getServices(api, action) {\n    try {\n        const response = yield call(api.getServiceCollection);\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        const data = response.data;\n        console.log('save', data);\n\n        yield put(ServiceActions.fetchServicesSuccess(data.services));\n    } catch (e) {\n        yield put(ServiceActions.fetchServicesFailure(e));\n    }\n}\n\nexport function * createService(api, action) {\n    try {\n        const response = yield call(api.postServiceCollection, action.service);\n\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        const data = response.data.data;\n\n        yield put(ServiceActions.createServiceSuccess(data.service));\n    } catch (e) {\n        yield put(ServiceActions.createServiceFailure(e));\n    }\n}\n\nexport function * getService(api, action) {\n    try {\n        const response = yield call(api.getServiceResource, action.service_id);\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n        const data = response.data.data;\n\n        yield put(ServiceActions.fetchServiceSuccess(data.service));\n    } catch (e) {\n        yield put(ServiceActions.fetchServiceFailure(e));\n    }\n}\n\nexport function * updateService(api, action) {\n    try {\n        const response = yield call(api.patchServiceResource, action.service_id, action.service);\n\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        const data = response.data.data;\n\n        yield put(ServiceActions.updateServiceSuccess(data.service));\n    } catch (e) {\n        yield put(ServiceActions.updateServiceFailure(e));\n    }\n}\n\nexport function * deleteService(api, action) {\n    try {\n        const response = yield call(api.deleteServiceResource, action.service_id );\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        yield put(ServiceActions.deleteServiceSuccess());\n    } catch (e) {\n        yield put(ServiceActions.deleteServiceFailure(e));\n    }\n}\n\nexport function * watchService(api) {\n    yield takeLatest(ServiceTypes.FETCH_SERVICES, getServices, api);\n    yield takeLatest(ServiceTypes.CREATE_SERVICE, createService, api);\n    yield takeLatest(ServiceTypes.FETCH_SERVICE, getService, api);\n    yield takeLatest(ServiceTypes.UPDATE_SERVICE, updateService, api);\n    yield takeLatest(ServiceTypes.DELETE_SERVICE, deleteService, api);\n}\n"]},"metadata":{},"sourceType":"module"}