{"ast":null,"code":"import { combineReducers } from 'redux';\nimport configureStore from './CreateStore';\nimport rootSaga from '../Sagas/';\nimport { Router, Route } from 'react-router';\nimport { routerReducer } from 'react-router-redux';\n/* ------------- Assemble The Reducers ------------- */\n\nexport var reducers = combineReducers({\n  auth: require('./LoginRedux').reducer,\n  //service: require('./ServiceRedux').reducer,\n  customer: require('./CustomerRedux').reducer,\n  routing: routerReducer\n});\nexport default (function () {\n  var _configureStore = configureStore(reducers, rootSaga),\n      store = _configureStore.store,\n      sagasManager = _configureStore.sagasManager,\n      sagaMiddleware = _configureStore.sagaMiddleware;\n\n  if (module.hot) {\n    module.hot.accept(function () {\n      var nextRootReducer = require('./').reducers;\n\n      store.replaceReducer(nextRootReducer);\n\n      var newYieldedSagas = require('../Sagas').default;\n\n      sagasManager.cancel();\n      sagasManager.done.then(function () {\n        sagasManager = sagaMiddleware.run(newYieldedSagas);\n      });\n    });\n  }\n\n  return store;\n});","map":{"version":3,"sources":["/home/marcelo/Documentos/shopManager/shopManager-frontend/src/Redux/index.js"],"names":["combineReducers","configureStore","rootSaga","Router","Route","routerReducer","reducers","auth","require","reducer","customer","routing","store","sagasManager","sagaMiddleware","module","hot","accept","nextRootReducer","replaceReducer","newYieldedSagas","default","cancel","done","then","run"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,cAA9B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA;;AACA,OAAO,IAAMC,QAAQ,GAAGN,eAAe,CAAC;AACtCO,EAAAA,IAAI,EAAEC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OADQ;AAEtC;AACAC,EAAAA,QAAQ,EAAEF,OAAO,CAAC,iBAAD,CAAP,CAA2BC,OAHC;AAItCE,EAAAA,OAAO,EAAEN;AAJ6B,CAAD,CAAhC;AAOP,gBAAe,YAAM;AAAA,wBAC2BJ,cAAc,CAACK,QAAD,EAAWJ,QAAX,CADzC;AAAA,MACbU,KADa,mBACbA,KADa;AAAA,MACNC,YADM,mBACNA,YADM;AAAA,MACQC,cADR,mBACQA,cADR;;AAGnB,MAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAM;AACtB,UAAMC,eAAe,GAAGV,OAAO,CAAC,IAAD,CAAP,CAAcF,QAAtC;;AACAM,MAAAA,KAAK,CAACO,cAAN,CAAqBD,eAArB;;AAEA,UAAME,eAAe,GAAGZ,OAAO,CAAC,UAAD,CAAP,CAAoBa,OAA5C;;AACAR,MAAAA,YAAY,CAACS,MAAb;AACAT,MAAAA,YAAY,CAACU,IAAb,CAAkBC,IAAlB,CAAuB,YAAM;AAC3BX,QAAAA,YAAY,GAAGC,cAAc,CAACW,GAAf,CAAmBL,eAAnB,CAAf;AACD,OAFD;AAGD,KATD;AAUD;;AAED,SAAOR,KAAP;AACD,CAjBD","sourcesContent":["import { combineReducers } from 'redux';\nimport configureStore from './CreateStore';\nimport rootSaga from '../Sagas/';\nimport { Router, Route } from 'react-router';\nimport { routerReducer } from 'react-router-redux';\n\n/* ------------- Assemble The Reducers ------------- */\nexport const reducers = combineReducers({\n  auth: require('./LoginRedux').reducer,\n  //service: require('./ServiceRedux').reducer,\n  customer: require('./CustomerRedux').reducer,\n  routing: routerReducer,\n})\n\nexport default () => {\n  let { store, sagasManager, sagaMiddleware } = configureStore(reducers, rootSaga)\n\n  if (module.hot) {\n    module.hot.accept(() => {\n      const nextRootReducer = require('./').reducers\n      store.replaceReducer(nextRootReducer)\n\n      const newYieldedSagas = require('../Sagas').default\n      sagasManager.cancel()\n      sagasManager.done.then(() => {\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\n      })\n    })\n  }\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}