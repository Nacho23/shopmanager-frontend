{"ast":null,"code":"import _regeneratorRuntime from \"/home/marcelo/Documentos/shopManager/shopManager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logout),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(checkAuth),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changePassword),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchAuth);\n\nimport { takeLatest, put, call, select } from 'redux-saga/effects';\nimport AuthActions, { AuthTypes } from '../Redux/LoginRedux';\nimport ApiResponseError from '../Services/ApiResponseError';\nimport history from '../Services/history';\nexport function login(api, action) {\n  var email, password, response;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          email = action.email, password = action.password;\n          _context.prev = 1;\n          _context.next = 4;\n          return call(api.doLogin, email, password);\n\n        case 4:\n          response = _context.sent;\n\n          if (response.ok) {\n            _context.next = 7;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 7:\n          // Add Token on LocalStorage\n          localStorage.setItem('access_token', JSON.stringify(response.data.access_token));\n          localStorage.setItem('user_uuid', response.data.user.uuid); //localStorage.setItem('user_rol', response.data.role)\n\n          _context.next = 11;\n          return put(AuthActions.loginSuccess(response.data));\n\n        case 11:\n          _context.next = 17;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](1);\n          _context.next = 17;\n          return put(AuthActions.loginFailure(_context.t0));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 13]]);\n}\nexport function logout(api, action) {\n  var accessToken, response;\n  return _regeneratorRuntime.wrap(function logout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          accessToken = JSON.parse(localStorage.getItem('access_token'));\n          _context2.next = 4;\n          return call(api.logout, accessToken);\n\n        case 4:\n          response = _context2.sent;\n\n          if (response.ok) {\n            _context2.next = 7;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 7:\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user_uuid');\n          localStorage.clear();\n          _context2.next = 12;\n          return put(AuthActions.logoutSuccess());\n\n        case 12:\n          _context2.next = 18;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 18;\n          return put(AuthActions.logoutFailure(_context2.t0));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 14]]);\n}\nexport function checkAuth(api, action) {\n  var accessToken, response;\n  return _regeneratorRuntime.wrap(function checkAuth$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          accessToken = JSON.parse(localStorage.getItem('access_token'));\n\n          if (accessToken) {\n            _context3.next = 4;\n            break;\n          }\n\n          throw new Error('Invalid access token');\n\n        case 4:\n          _context3.next = 6;\n          return call(api.checkAuth, accessToken);\n\n        case 6:\n          response = _context3.sent;\n\n          if (response.ok) {\n            _context3.next = 9;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 9:\n          // Update access token\n          localStorage.setItem('access_token', JSON.stringify(response.data.access_token));\n          _context3.next = 12;\n          return put(AuthActions.checkAuthSuccess(response.data.access_token));\n\n        case 12:\n          _context3.next = 20;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](0);\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('user_uuid');\n          localStorage.clear();\n          history.push('/login');\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 14]]);\n}\nexport function changePassword(api, action) {\n  var response, data;\n  return _regeneratorRuntime.wrap(function changePassword$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(api.patchChangePasswordRequestCollection, action.data);\n\n        case 3:\n          response = _context4.sent;\n\n          if (response.ok) {\n            _context4.next = 6;\n            break;\n          }\n\n          throw new ApiResponseError(response);\n\n        case 6:\n          data = response.data.data;\n          _context4.next = 9;\n          return put(AuthActions.changePasswordSuccess(data));\n\n        case 9:\n          _context4.next = 15;\n          break;\n\n        case 11:\n          _context4.prev = 11;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 15;\n          return put(AuthActions.changePasswordFailure(_context4.t0));\n\n        case 15:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 11]]);\n}\nexport function watchAuth(api) {\n  return _regeneratorRuntime.wrap(function watchAuth$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(AuthTypes.LOGIN, login, api);\n\n        case 2:\n          _context5.next = 4;\n          return takeLatest(AuthTypes.CHECK_AUTH, checkAuth, api);\n\n        case 4:\n          _context5.next = 6;\n          return takeLatest(AuthTypes.LOGOUT, logout, api);\n\n        case 6:\n          _context5.next = 8;\n          return takeLatest(AuthTypes.CHANGE_PASSWORD, changePassword, api);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["/home/marcelo/Documentos/shopManager/shopManager-frontend/src/Sagas/LoginSagas.js"],"names":["login","logout","checkAuth","changePassword","watchAuth","takeLatest","put","call","select","AuthActions","AuthTypes","ApiResponseError","history","api","action","email","password","doLogin","response","ok","localStorage","setItem","JSON","stringify","data","access_token","user","uuid","loginSuccess","loginFailure","accessToken","parse","getItem","removeItem","clear","logoutSuccess","logoutFailure","Error","checkAuthSuccess","push","patchChangePasswordRequestCollection","changePasswordSuccess","changePasswordFailure","LOGIN","CHECK_AUTH","LOGOUT","CHANGE_PASSWORD"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, select } from 'redux-saga/effects';\nimport AuthActions, { AuthTypes } from '../Redux/LoginRedux';\nimport ApiResponseError from '../Services/ApiResponseError';\nimport history from '../Services/history';\n\nexport function * login(api, action) {\n    const { email, password } = action;\n\n    try {\n        const response = yield call(api.doLogin, email, password);\n\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        // Add Token on LocalStorage\n        localStorage.setItem('access_token', JSON.stringify(response.data.access_token));\n        localStorage.setItem('user_uuid', response.data.user.uuid);\n        //localStorage.setItem('user_rol', response.data.role)\n\n        yield put(AuthActions.loginSuccess(response.data));\n    } catch (e) {\n        yield put(AuthActions.loginFailure(e));\n    }\n}\n\nexport function * logout(api, action) {\n    try {\n        const accessToken = JSON.parse(localStorage.getItem('access_token'));\n        const response = yield call(api.logout, accessToken);\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user_uuid');\n        localStorage.clear();\n\n        yield put(AuthActions.logoutSuccess());\n    } catch (e) {\n        yield put(AuthActions.logoutFailure(e));\n    }\n}\n\nexport function * checkAuth(api, action) {\n    try {\n        const accessToken = JSON.parse(localStorage.getItem('access_token'));\n        if (!accessToken){\n            throw new Error('Invalid access token');\n        }\n\n        const response = yield call(api.checkAuth, accessToken);\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        // Update access token\n        localStorage.setItem('access_token', JSON.stringify(response.data.access_token));\n\n        yield put(AuthActions.checkAuthSuccess(response.data.access_token));\n    } catch (e) {\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('user_uuid');\n        localStorage.clear();\n        history.push('/login');\n    }\n}\n\nexport function * changePassword(api, action) {\n    try {\n        const response = yield call(api.patchChangePasswordRequestCollection, action.data);\n        if (!response.ok) {\n            throw new ApiResponseError(response);\n        }\n\n        const data = response.data.data;\n\n        yield put(AuthActions.changePasswordSuccess(data));\n    } catch (e) {\n        yield put(AuthActions.changePasswordFailure(e));\n    }\n}\n\nexport function * watchAuth(api) {\n    yield takeLatest(AuthTypes.LOGIN, login, api);\n    yield takeLatest(AuthTypes.CHECK_AUTH, checkAuth, api);\n    yield takeLatest(AuthTypes.LOGOUT, logout, api);\n    yield takeLatest(AuthTypes.CHANGE_PASSWORD, changePassword, api);\n}\n"]},"metadata":{},"sourceType":"module"}